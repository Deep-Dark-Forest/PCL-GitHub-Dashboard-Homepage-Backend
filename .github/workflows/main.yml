name: Fetch Issue Counts by Label

on:
  schedule:
    - cron: "*/15 * * * *"
  workflow_dispatch:

jobs:
  fetch-labels:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install Axios
        run: npm install axios

      - name: Fetch Issues by Label
        id: fetch_issues
        env:
          SHEEP: ${{ secrets.SHEEP }}
        run: |
          echo "const axios = require('axios');
          const fs = require('fs');
          const path = './';
          const repo = 'Hex-Dragon/PCL2';
          const url = `https://api.github.com/repos/${repo}/labels`;
          const excludePatterns = /➦ (删除|解锁|锁定)/;

          (async function() {
            try {
              const { data: labels } = await axios.get(url, {
                headers: { 
                  'Accept': 'application/vnd.github.v3+json',
                  'Authorization': `Bearer ${process.env.SHEEP}`
                }
              });

              for (const label of labels) {
                if (excludePatterns.test(label.name)) continue;
                const sanitizedLabel = label.name.replace(/[🟩🟪🟨🚫<>"\\/:|?* ]/g, '_');
                const fileName = `${sanitizedLabel}.md`;
                const issuesUrl = `https://api.github.com/search/issues?q=repo:${repo}+is:issue+label:"${encodeURIComponent(label.name)}"`;
                const { data: issues } = await axios.get(issuesUrl, {
                  headers: { 
                    'Accept': 'application/vnd.github.v3+json',
                    'Authorization': `Bearer ${process.env.SHEEP}`
                  }
                });
                fs.writeFileSync(path + fileName, `${issues.total_count}`);
              }
            } catch (error) {
              console.error(`Error fetching labels or writing files: ${error.message}`);
              process.exit(1);
            }
          })();" > fetch_labels.js

      - name: Run Node Script
        run: node fetch_labels.js

      - name: Commit and Push Changes
        env:
          SHEEP: ${{ secrets.SHEEP }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "Update issue counts for labels" || echo "No changes to commit"
          git push
